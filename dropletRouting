Skip to content
This repository  
Search
Pull requests
Issues
Gist
 @uconn-csml
 Unwatch 1
  Star 0
  Fork 0 uconn-csml/DropletRouting
 Code  Issues 0  Pull requests 0  Wiki  Pulse  Graphs  Settings
Branch: master Find file Copy pathDropletRouting/index.html
4f53a70  on Sep 17, 2015
@uconn-csml uconn-csml Create index.html
1 contributor
RawBlameHistory     173 lines (142 sloc)  6.51 KB

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <title>Droplet routing sample using WebGL (Ryan Rood) </title>
    <!-- Babylon.js -->
    <script src="http://www.babylonjs.com/hand.minified-1.2.js"></script>
    <script src="http://www.babylonjs.com/cannon.js"></script>
    <script src="http://www.babylonjs.com/oimo.js"></script>
    <script src="http://www.babylonjs.com/babylon.js"></script>
    <style>
        html, body {
            overflow: hidden;
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        #renderCanvas {
            width: 100%;
            height: 100%;
            touch-action: none;
        }
    </style>
</head>
<body>
    <canvas id="renderCanvas"></canvas>
    <script>
        //Enable intellisense for babylon.js
        /// <reference path="http://www.babylonjs.com/babylon.js" />
        var canvas = document.getElementById("renderCanvas");
        var engine = new BABYLON.Engine(canvas, true);
        var createScene = function () {
            // This creates a basic Babylon Scene object (non-mesh)
            var scene = new BABYLON.Scene(engine);
            // ArcRotateCamera >> Camera turning around a 3D point (here Vector zero) with mouse and cursor keys
            // Parameters : name, alpha, beta, radius, target, scene
            var camera = new BABYLON.ArcRotateCamera("Camera", 0.2, 1.1, 120, new BABYLON.Vector3.Zero(), scene);
            camera.attachControl(canvas, true);
            // Create light
            var light = new BABYLON.PointLight("Light", new BABYLON.Vector3(1, 20, 1), scene);
            light.diffuse = new BABYLON.Color3(1, 1, 1);
            light.specular = new BABYLON.Color3(1, 1, 1);
            // Default intensity is 1. Let's dim the light a small amount
            light.intensity = 1;
            //Creation of a droplet
            //(name, height, diamTop, diamBottom, tessellation, [optional height subdivs], scene, updatable)
            var droplet1 = BABYLON.Mesh.CreateCylinder("Droplet #1", 3, 10, 10, 64, 1, scene, false);
            var materialDroplet1 = new BABYLON.StandardMaterial("texture1", scene);
            materialDroplet1.diffuseColor = new BABYLON.Color3(0.2, 0.2, 0.8);
            materialDroplet1.specularColor = new BABYLON.Color3(0.2, 0.2, 0.8);
            materialDroplet1.alpha = 0.6;
            droplet1.material = materialDroplet1;
            droplet1.position.x = 10;
            droplet1.position.y = 3;
            droplet1.position.z = -10;
            
            //ground
            var ground = BABYLON.Mesh.CreateGround("ground", 100, 100, 2, scene);
            //background color
            scene.clearColor = new BABYLON.Color3(0, 0, 0);
            var i = 1;
            //Create animation
            scene.registerBeforeRender(function () {
                camera.alpha += 0.0005 * scene.getAnimationRatio();
                if (i % 120 < 30) {
                    droplet1.position.x += 100;
                } else if (i % 120 < 60) {
                    droplet1.position.z += 100;
                } else if (i % 120 < 90) {
                    droplet1.position.x -= 100;
                } else {
                    droplet1.position.z -= 100;
                }
                i++;
            });
            // Load the sound and play it automatically once ready
            var music = new BABYLON.Sound("Music", "Music1.mp3", scene, null, { loop: true, autoplay: true });
            return scene;
        };
        var scene = createScene();
        engine.runRenderLoop(function () {
            scene.render();
        });
        // Resize
        window.addEventListener("resize", function () {
            engine.resize();
        });
    </script>
</body>
</html>


